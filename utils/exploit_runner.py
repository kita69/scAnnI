import os
import subprocess
from rich import print
from rich.console import Console


SCANS_DIR = "scans"

def collect_rc_files():
    rc_files = []
    for root, dirs, files in os.walk(SCANS_DIR):
        for file in files:
            if file.endswith(".rc"):
                rc_files.append(os.path.join(root, file))
    return rc_files


def display_exploit_list(rc_files):
    print("\n[bold cyan]üìÅ Exploit disponibili:[/bold cyan]")
    for idx, rc in enumerate(rc_files, 1):
        print(f"{idx}. {rc}")


def execute_exploit(rc_path, session_memory):
    try:
        print(f"\n‚ñ∂ Esecuzione: {rc_path}")
        result = subprocess.run(["msfconsole", "-r", rc_path], capture_output=True, text=True, timeout=600)

        if result.returncode != 0:
            print("[red]üö´ Errore durante l'esecuzione[/red]")
        else:
            print("[green]‚úî Exploit completato[/green]")
            session_memory["executed_exploits"].append(rc_path)
    except subprocess.TimeoutExpired:
        print("[red]‚è≥ Timeout esecuzione exploit[/red]")


def exploit_menu(session_memory):
    rc_files = collect_rc_files()
    console = Console()
    if not rc_files:
        console.print("[red]üö´ Nessun file .rc trovato.[/red]")
        console.print("[yellow]üí° Suggerimento: esegui prima una scansione (opzione 1 o 2) per generarli.[/yellow]")
        console.input("\n[green]Premi Invio per tornare al menu...[/green]")
        return

    display_exploit_list(rc_files)

    print("\nScegli exploit da eseguire:")
    print("‚Ä¢ Inserisci numeri separati da virgole (es. 1,2,3)")
    print("‚Ä¢ Digita 'tutti' per eseguire tutti")
    print("‚Ä¢ Premi Invio per tornare al menu")

    choice = input("Scelta: ").strip()
    if not choice:
        return
    elif choice.lower() == "tutti":
        for rc in rc_files:
            execute_exploit(rc, session_memory)
    else:
        try:
            selected = [int(x.strip()) for x in choice.split(",") if x.strip().isdigit()]
            for idx in selected:
                if 1 <= idx <= len(rc_files):
                    execute_exploit(rc_files[idx - 1], session_memory)
        except Exception:
            print("[red]‚ùå Input non valido[/red]")
